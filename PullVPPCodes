import http.client
import json
import requests
##from selenium import webdriver
import random
import csv
##from selenium.webdriver.chrome.options import Options
##from selenium.webdriver.common.keys import Keys
##from selenium.webdriver.common.by import By
##from selenium.webdriver.support import expected_conditions as EC
##from selenium.webdriver.support.wait import WebDriverWait
elementArrayList = []
category = []
##chrome_options = Options()
##chrome_options.headless = True
##driver = webdriver.Chrome(options=chrome_options)

conn = http.client.HTTPSConnection("mursd.jamfcloud.com")
base64stuff = "c29uZWFsOkZpZ2h0bWU0aXQ=="
resourcesjss = "/JSSResource/mobiledeviceapplications"
names = []

url = "https://mursd.jamfcloud.com//JSSResource/mobiledeviceapplications"
url2 = "https://mursd.jamfcloud.com//JSSResource/mobiledeviceapplications/id/"
all_device_url = "https://mursd.jamfcloud.com/JSSResource/mobiledevices"

headers = {
	"accept": "application/json",
	"authorization": "Basic {}".format(base64stuff)
}
 
response = requests.get(url, headers=headers)
jsonResponse = response.json()
##print(jsonResponse)
appIDURL = []
appNames = []
externalLinksList = []

response3 = requests.get(all_device_url, headers=headers)
jsonResponse3 = response3.json()

##for all in jsonResponse3['mobile_devices']:
	##id_thing = all['id']
	##url_only = "https://mursd.jamfcloud.com/JSSResource/mobiledevices/id/{}/subset/Applications".format(id_thing)
	##response4 = requests.get(url_only, headers=headers)
	##jsonResponse4 = response4.json()
	##apps = []
	##applications = jsonResponse4['mobile_device']['applications']
	##print("Device", id_thing, "has the following apps:")
	##for i in applications:
	##	print(i['application_name'])
	##	apps.append(i['application_name'])
	##print("*****************************************")


with open('appDesc.csv', 'w', newline='') as csvfile: 
	fieldnames = ['Name','Description','ID','All Devices','All Users', 'Mobile Devices', 'Buildings', 'Departments', 'Mobile Device Groups', 'Users', 'User Groups', 'VPP Assigned', 'Total VPP', 'Remaining VPP Licenses', 'Used VPP Licenses']
	writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

	for key in jsonResponse['mobile_device_applications']:
		##print(key['id'],key['name'],key['bundle_id'])
		##print(key['general']['description'])
		idStuff = key['id']
		nameStuff = key['name']
		url_stuff = "https://mursd.jamfcloud.com//JSSResource/mobiledeviceapplications/id/{}".format(key['id'])
		appIDURL.append(url_stuff)##"https://mursd.jamfcloud.com//JSSResource/mobiledeviceapplications/id/{}".format(key['id']))
		appNames.append(key['name'])
		response2 = requests.get(url_stuff, headers=headers)
		jsonResponse2 = response2.json()
		description = jsonResponse2['mobile_device_application']['general']['description']
		allDevices = jsonResponse2['mobile_device_application']['scope']['all_mobile_devices']
		allusers = jsonResponse2['mobile_device_application']['scope']['all_jss_users']
		mobileDevices = jsonResponse2['mobile_device_application']['scope']['mobile_devices']
		buildings = jsonResponse2['mobile_device_application']['scope']['buildings']
		departments = jsonResponse2['mobile_device_application']['scope']['departments']
		mobile_device_groups = jsonResponse2['mobile_device_application']['scope']['mobile_device_groups']
		jss_users = jsonResponse2['mobile_device_application']['scope']['jss_users']
		jss_user_groups = jsonResponse2['mobile_device_application']['scope']['jss_user_groups']
		assigned_vpp = jsonResponse2['mobile_device_application']['vpp']['assign_vpp_device_based_licenses']
		total_vpp = jsonResponse2['mobile_device_application']['vpp']['total_vpp_licenses']
		remaining_vpp = jsonResponse2['mobile_device_application']['vpp']['remaining_vpp_licenses']
		used_vpp = jsonResponse2['mobile_device_application']['vpp']['used_vpp_licenses']
		##print("Name: " + key['name'])
		##print("Description: " + description)
		writer.writerow({'Name': nameStuff, 'Description': description, 'ID':idStuff, 'All Devices': allDevices, 'All Users': allusers, 'Mobile Devices': mobileDevices, 'Buildings': buildings, 'Departments': departments, 'Mobile Device Groups': mobile_device_groups, 'Users': jss_users, 'User Groups': jss_user_groups, 'VPP Assigned': assigned_vpp, 'Total VPP': total_vpp, 'Remaining VPP Licenses': remaining_vpp, 'Used VPP Licenses': used_vpp})

##print(appIDURL)

##for entry in appIDURL:
##	url3 = entry
##	reponse2 = requests.get(url3, headers=headers)
##	jsonResponse2 = reponse2.json()
##	externalLinks = jsonResponse2['mobile_device_application']['general']['external_url']
##	externalLinksList.append(externalLinks)

##print(externalLinksList)

##for j in externalLinksList:
    ##driver.get(j)
    ##element = driver.find_elements(By.CLASS_NAME, "section-description") ##"information-list__item__definition"
    ##for i in element:
        ##elementArrayList = []
        ##elementArrayList.append(i.text)
        ##category.append(elementArrayList[2])
##print(category)
##driver.quit()
